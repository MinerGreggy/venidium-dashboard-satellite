
name: Release-Build-Publish

on:
  push

jobs:
 build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 12.x ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}
    if: "contains(github.event.head_commit.message, 'NewRelease')"
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install
        run: yarn install
      - name: Package release archive
        run: yarn run package
      - name: Save release archive
        uses: actions/upload-artifact@v2
        with:
          name: release-archive-${{ matrix.os }}
          path: build/*.zip

 release-npm:
   runs-on: ubuntu-latest
   needs: build
   if: "contains(github.event.head_commit.message, 'NewRelease')"
   steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12.x
          registry-url: 'https://registry.npmjs.org'
      - name: Publish To NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      - uses: flood-io/is-published-on-npm@v1
        id: is-published

      - name: Upadate Release Tags
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.is-published.outputs.version }}
          release_name: Release ${{ steps.is-published.outputs.version }}
          draft: false
          prerelease: false

      - run: echo "Dashboard is at version ${{ steps.is-published.outputs.version }}"

      - name: Download Files For Adding To The Release Assets
        uses: actions/download-artifact@v2
      - name: View Downloaded Content
        run: ls -R

      - name: Upload binaries to release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'release-archive-*/*.zip'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.is-published.outputs.version }}




